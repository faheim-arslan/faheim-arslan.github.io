{"version":3,"file":"component---src-pages-index-js-fc1fd413e309e92ba7cc.js","mappings":"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","sources":["webpack://faheim-arslan/./node_modules/camelcase/index.js","webpack://faheim-arslan/../src/image-utils.ts","webpack://faheim-arslan/../src/components/hooks.ts","webpack://faheim-arslan/../src/components/layout-wrapper.tsx","webpack://faheim-arslan/../src/components/picture.tsx","webpack://faheim-arslan/../src/components/placeholder.tsx","webpack://faheim-arslan/../src/components/main-image.tsx","webpack://faheim-arslan/../src/components/gatsby-image.server.tsx","webpack://faheim-arslan/../src/components/gatsby-image.browser.tsx","webpack://faheim-arslan/../src/components/static-image.server.tsx","webpack://faheim-arslan/../src/components/static-image.tsx","webpack://faheim-arslan/./node_modules/typeit/dist/index.es.js","webpack://faheim-arslan/./src/components/typingHeader.js","webpack://faheim-arslan/./src/components/about.js","webpack://faheim-arslan/./src/components/contact.js","webpack://faheim-arslan/./src/components/experience.js","webpack://faheim-arslan/./src/components/projects.js","webpack://faheim-arslan/./src/components/navigationBar.js","webpack://faheim-arslan/./src/pages/index.js"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","// TypeIt by Alex MacArthur - https://typeitjs.com\nconst isArray = (thing) => Array.isArray(thing);\nconst asArray = (value) => {\n  return isArray(value) ? value : [value];\n};\nlet Queue = function(initialItems) {\n  let add = function(steps) {\n    asArray(steps).forEach((step) => {\n      return _q.set(Symbol(step.char?.innerText), buildQueueItem({ ...step }));\n    });\n    return this;\n  };\n  let getTypeable = () => rawValues().filter((value) => value.typeable);\n  let set = function(index, item) {\n    let keys = [..._q.keys()];\n    _q.set(keys[index], buildQueueItem(item));\n  };\n  let buildQueueItem = (queueItem) => {\n    queueItem.shouldPauseCursor = function() {\n      return Boolean(this.typeable || this.cursorable || this.deletable);\n    };\n    return queueItem;\n  };\n  let reset = function() {\n    _q.forEach((item) => delete item.done);\n  };\n  let wipe = function() {\n    _q = /* @__PURE__ */ new Map();\n    add(initialItems);\n  };\n  let getQueue = () => _q;\n  let rawValues = () => Array.from(_q.values());\n  let destroy = (key) => _q.delete(key);\n  let getItems = (all = false) => all ? rawValues() : rawValues().filter((i) => !i.done);\n  let done = (key, shouldDestroy = false) => shouldDestroy ? _q.delete(key) : _q.get(key).done = true;\n  let _q = /* @__PURE__ */ new Map();\n  add(initialItems);\n  return {\n    add,\n    set,\n    wipe,\n    reset,\n    destroy,\n    done,\n    getItems,\n    getQueue,\n    getTypeable\n  };\n};\nconst toArray = (val) => Array.from(val);\nconst createTextNode = (content) => document.createTextNode(content);\nlet expandTextNodes = (element) => {\n  [...element.childNodes].forEach((child) => {\n    if (child.nodeValue) {\n      [...child.nodeValue].forEach((c) => {\n        child.parentNode.insertBefore(createTextNode(c), child);\n      });\n      child.remove();\n      return;\n    }\n    expandTextNodes(child);\n  });\n  return element;\n};\nconst getParsedBody = (content) => {\n  let doc = document.implementation.createHTMLDocument();\n  doc.body.innerHTML = content;\n  return expandTextNodes(doc.body);\n};\nconst DATA_ATTRIBUTE = \"data-typeit-id\";\nconst CURSOR_CLASS = \"ti-cursor\";\nconst END = \"END\";\nconst DEFAULT_STATUSES = {\n  started: false,\n  completed: false,\n  frozen: false,\n  destroyed: false\n};\nconst DEFAULT_OPTIONS = {\n  breakLines: true,\n  cursor: {\n    autoPause: true,\n    autoPauseDelay: 500,\n    animation: {\n      frames: [0, 0, 1].map((n) => {\n        return { opacity: n };\n      }),\n      options: {\n        iterations: Infinity,\n        easing: \"steps(2, start)\",\n        fill: \"forwards\"\n      }\n    }\n  },\n  cursorChar: \"|\",\n  cursorSpeed: 1e3,\n  deleteSpeed: null,\n  html: true,\n  lifeLike: true,\n  loop: false,\n  loopDelay: 750,\n  nextStringDelay: 750,\n  speed: 100,\n  startDelay: 250,\n  startDelete: false,\n  strings: [],\n  waitUntilVisible: false,\n  beforeString: () => {\n  },\n  afterString: () => {\n  },\n  beforeStep: () => {\n  },\n  afterStep: () => {\n  },\n  afterComplete: () => {\n  }\n};\nconst PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;\nfunction walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {\n  let cursor = element.querySelector(`.${CURSOR_CLASS}`);\n  let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {\n    acceptNode: (node) => {\n      if (cursor && shouldIncludeCursor) {\n        if (node.classList?.contains(CURSOR_CLASS)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        if (cursor.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n      }\n      return node.classList?.contains(CURSOR_CLASS) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n    }\n  });\n  let nextNode;\n  let nodes = [];\n  while (nextNode = walker.nextNode()) {\n    if (!nextNode.originalParent) {\n      nextNode.originalParent = nextNode.parentNode;\n    }\n    nodes.push(nextNode);\n  }\n  return shouldReverse ? nodes.reverse() : nodes;\n}\nfunction chunkStringAsHtml(string) {\n  return walkElementNodes(getParsedBody(string));\n}\nfunction maybeChunkStringAsHtml(str, asHtml = true) {\n  return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);\n}\nconst createElement = (el) => document.createElement(el);\nconst appendStyleBlock = (styles, id = \"\") => {\n  let styleBlock = createElement(\"style\");\n  styleBlock.id = id;\n  styleBlock.appendChild(createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\nconst calculateDelay = (delayArg) => {\n  if (!isArray(delayArg)) {\n    delayArg = [delayArg / 2, delayArg / 2];\n  }\n  return delayArg;\n};\nconst randomInRange = (value, range2) => {\n  return Math.abs(\n    Math.random() * (value + range2 - (value - range2)) + (value - range2)\n  );\n};\nlet range = (val) => val / 2;\nfunction calculatePace(options) {\n  let { speed, deleteSpeed, lifeLike } = options;\n  deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;\n  return lifeLike ? [\n    randomInRange(speed, range(speed)),\n    randomInRange(deleteSpeed, range(deleteSpeed))\n  ] : [speed, deleteSpeed];\n}\nconst destroyTimeouts = (timeouts) => {\n  timeouts.forEach(clearTimeout);\n  return [];\n};\nconst generateHash = () => Math.random().toString().substring(2, 9);\nconst isInput = (el) => \"value\" in el;\nlet getAllChars = (element) => {\n  if (isInput(element)) {\n    return toArray(element.value);\n  }\n  return walkElementNodes(element, true).filter(\n    (c) => !(c.childNodes.length > 0)\n  );\n};\nconst fireWhenVisible = (element, func) => {\n  let observer = new IntersectionObserver(\n    (entries, observer2) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          func();\n          observer2.unobserve(element);\n        }\n      });\n    },\n    { threshold: 1 }\n  );\n  observer.observe(element);\n};\nlet handleFunctionalArg = (arg) => {\n  return typeof arg === \"function\" ? arg() : arg;\n};\nconst isNumber = (value) => Number.isInteger(value);\nlet select = (selector, element = document, all = false) => {\n  return element[`querySelector${all ? \"All\" : \"\"}`](selector);\n};\nlet isBodyElement = (node) => /body/i.test(node?.tagName);\nlet insertIntoElement = (originalTarget, character) => {\n  if (isInput(originalTarget)) {\n    originalTarget.value = `${originalTarget.value}${character.textContent}`;\n    return;\n  }\n  character.innerHTML = \"\";\n  let target = isBodyElement(character.originalParent) ? originalTarget : character.originalParent || originalTarget;\n  target.insertBefore(\n    character,\n    select(\".\" + CURSOR_CLASS, target) || null\n  );\n};\nlet updateCursorPosition = (steps, cursorPosition, printedCharacters) => {\n  return Math.min(\n    Math.max(cursorPosition + steps, 0),\n    printedCharacters.length\n  );\n};\nconst merge = (originalObj, newObj) => Object.assign({}, originalObj, newObj);\nconst removeNode = (node, rootElement) => {\n  if (!node)\n    return;\n  let nodeParent = node.parentNode;\n  let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? node : nodeParent;\n  nodeToRemove.remove();\n};\nconst repositionCursor = (element, allChars, newCursorPosition) => {\n  let nodeToInsertBefore = allChars[newCursorPosition - 1];\n  let cursor = select(`.${CURSOR_CLASS}`, element);\n  element = nodeToInsertBefore?.parentNode || element;\n  element.insertBefore(cursor, nodeToInsertBefore || null);\n};\nfunction selectorToElement(thing) {\n  return typeof thing === \"string\" ? select(thing) : thing;\n}\nconst isNonVoidElement = (el) => /<(.+)>(.*?)<\\/(.+)>/.test(el.outerHTML);\nlet wait = (callback, delay, timeouts) => {\n  return new Promise((resolve) => {\n    let cb = async () => {\n      await callback();\n      resolve();\n    };\n    timeouts.push(setTimeout(cb, delay || 0));\n  });\n};\nlet cursorFontStyles = {\n  \"font-family\": \"\",\n  \"font-weight\": \"\",\n  \"font-size\": \"\",\n  \"font-style\": \"\",\n  \"line-height\": \"\",\n  color: \"\",\n  transform: \"translateX(-.125em)\"\n};\nlet setCursorStyles = (id, element) => {\n  let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;\n  let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;\n  let computedStyles = getComputedStyle(element);\n  let customProperties = Object.entries(cursorFontStyles).reduce(\n    (accumulator, [item, value]) => {\n      return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;\n    },\n    \"\"\n  );\n  appendStyleBlock(\n    `${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`,\n    id\n  );\n};\nconst duplicate = (value, times) => new Array(times).fill(value);\nconst countStepsToSelector = ({\n  queueItems,\n  selector,\n  cursorPosition,\n  to\n}) => {\n  if (isNumber(selector)) {\n    return selector * -1;\n  }\n  let isMovingToEnd = new RegExp(END, \"i\").test(to);\n  let selectorIndex = selector ? [...queueItems].reverse().findIndex(({ char }) => {\n    let parentElement = char.parentElement;\n    let parentMatches = parentElement.matches(selector);\n    if (isMovingToEnd && parentMatches) {\n      return true;\n    }\n    return parentMatches && parentElement.firstChild.isSameNode(char);\n  }) : -1;\n  if (selectorIndex < 0) {\n    selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;\n  }\n  let offset = isMovingToEnd ? 0 : 1;\n  return selectorIndex - cursorPosition + offset;\n};\nlet beforePaint = (cb) => {\n  return new Promise((resolve) => {\n    requestAnimationFrame(async () => {\n      resolve(await cb());\n    });\n  });\n};\nlet getAnimationFromElement = (element) => {\n  return element?.getAnimations().find((animation) => {\n    return animation.id === element.dataset.tiAnimationId;\n  });\n};\nlet setCursorAnimation = ({\n  cursor,\n  frames,\n  options\n}) => {\n  let animation = cursor.animate(frames, options);\n  animation.pause();\n  animation.id = cursor.dataset.tiAnimationId;\n  beforePaint(() => {\n    beforePaint(() => {\n      animation.play();\n    });\n  });\n  return animation;\n};\nlet rebuildCursorAnimation = ({\n  cursor,\n  options,\n  cursorOptions\n}) => {\n  if (!cursor || !cursorOptions)\n    return;\n  let animation = getAnimationFromElement(cursor);\n  let oldCurrentTime;\n  if (animation) {\n    options.delay = animation.effect.getComputedTiming().delay;\n    oldCurrentTime = animation.currentTime;\n    animation.cancel();\n  }\n  let newAnimation = setCursorAnimation({\n    cursor,\n    frames: cursorOptions.animation.frames,\n    options\n  });\n  if (oldCurrentTime) {\n    newAnimation.currentTime = oldCurrentTime;\n  }\n  return newAnimation;\n};\nlet execute = (queueItem) => queueItem.func?.call(null);\nlet fireItem = async ({\n  index,\n  queueItems,\n  wait: wait2,\n  cursor,\n  cursorOptions\n}) => {\n  let queueItem = queueItems[index][1];\n  let instantQueue = [];\n  let tempIndex = index;\n  let futureItem = queueItem;\n  let shouldBeGrouped = () => futureItem && !futureItem.delay;\n  let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;\n  while (shouldBeGrouped()) {\n    instantQueue.push(futureItem);\n    shouldBeGrouped() && tempIndex++;\n    futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;\n  }\n  if (instantQueue.length) {\n    await beforePaint(async () => {\n      for (let q of instantQueue) {\n        await execute(q);\n      }\n    });\n    return tempIndex - 1;\n  }\n  let animation = getAnimationFromElement(cursor);\n  let options;\n  if (animation) {\n    options = {\n      ...animation.effect.getComputedTiming(),\n      delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0\n    };\n  }\n  await wait2(async () => {\n    if (animation && shouldPauseCursor) {\n      animation.cancel();\n    }\n    await beforePaint(() => {\n      execute(queueItem);\n    });\n  }, queueItem.delay);\n  await rebuildCursorAnimation({\n    cursor,\n    options,\n    cursorOptions\n  });\n  return index;\n};\nlet processCursorOptions = (cursorOptions) => {\n  if (typeof cursorOptions === \"object\") {\n    let newOptions = {};\n    let { frames: defaultFrames, options: defaultOptions } = DEFAULT_OPTIONS.cursor.animation;\n    newOptions.animation = cursorOptions.animation || {};\n    newOptions.animation.frames = cursorOptions.animation?.frames || defaultFrames;\n    newOptions.animation.options = merge(\n      defaultOptions,\n      cursorOptions.animation?.options || {}\n    );\n    newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;\n    newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;\n    return newOptions;\n  }\n  if (cursorOptions === true) {\n    return DEFAULT_OPTIONS.cursor;\n  }\n  return cursorOptions;\n};\nconst TypeIt = function(element, options = {}) {\n  let _wait = async (callback, delay, silent = false) => {\n    if (_statuses.frozen) {\n      await new Promise((resolve) => {\n        this.unfreeze = () => {\n          _statuses.frozen = false;\n          resolve();\n        };\n      });\n    }\n    silent || await _opts.beforeStep(this);\n    await wait(callback, delay, _timeouts);\n    silent || await _opts.afterStep(this);\n  };\n  let _fireItemWithContext = (index, queueItems) => {\n    return fireItem({\n      index,\n      queueItems,\n      wait: _wait,\n      cursor: _cursor,\n      cursorOptions: _opts.cursor\n    });\n  };\n  let _removeNode = (node) => removeNode(node, _element);\n  let _elementIsInput = () => isInput(_element);\n  let _getPace = (index = 0) => calculatePace(_opts)[index];\n  let _getAllChars = () => getAllChars(_element);\n  let _maybeAppendPause = (opts = {}) => {\n    let delay = opts.delay;\n    delay && _queue.add({ delay });\n  };\n  let _queueAndReturn = (steps, opts) => {\n    _queue.add(steps);\n    _maybeAppendPause(opts);\n    return this;\n  };\n  let _getDerivedCursorPosition = () => _predictedCursorPosition ?? _cursorPosition;\n  let _generateTemporaryOptionQueueItems = (newOptions = {}) => {\n    return [\n      { func: () => _options(newOptions) },\n      { func: () => _options(_opts) }\n    ];\n  };\n  let _addSplitPause = (items) => {\n    let delay = _opts.nextStringDelay;\n    _queue.add([{ delay: delay[0] }, ...items, { delay: delay[1] }]);\n  };\n  let _setUpCursor = () => {\n    if (_elementIsInput()) {\n      return;\n    }\n    let cursor = createElement(\"span\");\n    cursor.className = CURSOR_CLASS;\n    if (!_shouldRenderCursor) {\n      cursor.style.visibility = \"hidden\";\n      return cursor;\n    }\n    cursor.innerHTML = getParsedBody(_opts.cursorChar).innerHTML;\n    return cursor;\n  };\n  let _attachCursor = async () => {\n    !_elementIsInput() && _cursor && _element.appendChild(_cursor);\n    if (_shouldRenderCursor) {\n      setCursorStyles(_id, _element);\n      _cursor.dataset.tiAnimationId = _id;\n      let { animation } = _opts.cursor;\n      let { frames, options: options2 } = animation;\n      setCursorAnimation({\n        frames,\n        cursor: _cursor,\n        options: {\n          duration: _opts.cursorSpeed,\n          ...options2\n        }\n      });\n    }\n  };\n  let _generateQueue = () => {\n    let strings = _opts.strings.filter((string) => !!string);\n    strings.forEach((string, index) => {\n      this.type(string);\n      if (index + 1 === strings.length) {\n        return;\n      }\n      let splitItems = _opts.breakLines ? [{ func: () => _type(createElement(\"BR\")), typeable: true }] : duplicate(\n        {\n          func: _delete,\n          delay: _getPace(1)\n        },\n        _queue.getTypeable().length\n      );\n      _addSplitPause(splitItems);\n    });\n  };\n  let _prepLoop = async (delay) => {\n    let derivedCursorPosition = _getDerivedCursorPosition();\n    derivedCursorPosition && await _move({ value: derivedCursorPosition });\n    let queueItems = _getAllChars().map((c) => {\n      return [\n        Symbol(),\n        {\n          func: _delete,\n          delay: _getPace(1),\n          deletable: true,\n          shouldPauseCursor: () => true\n        }\n      ];\n    });\n    for (let index = 0; index < queueItems.length; index++) {\n      await _fireItemWithContext(index, queueItems);\n    }\n    _queue.reset();\n    _queue.set(0, { delay });\n  };\n  let _maybePrependHardcodedStrings = (strings) => {\n    let existingMarkup = _element.innerHTML;\n    if (!existingMarkup) {\n      return strings;\n    }\n    _element.innerHTML = \"\";\n    if (_opts.startDelete) {\n      _element.innerHTML = existingMarkup;\n      expandTextNodes(_element);\n      _addSplitPause(\n        duplicate(\n          {\n            func: _delete,\n            delay: _getPace(1),\n            deletable: true\n          },\n          _getAllChars().length\n        )\n      );\n      return strings;\n    }\n    let hardCodedStrings = existingMarkup.replace(/<!--(.+?)-->/g, \"\").trim().split(/<br(?:\\s*?)(?:\\/)?>/);\n    return hardCodedStrings.concat(strings);\n  };\n  let _fire = async (remember = true) => {\n    _statuses.started = true;\n    let cleanUp = (qKey) => {\n      _queue.done(qKey, !remember);\n    };\n    try {\n      let queueItems = [..._queue.getQueue()];\n      for (let index = 0; index < queueItems.length; index++) {\n        let [queueKey, queueItem] = queueItems[index];\n        if (queueItem.done)\n          continue;\n        if (!queueItem.deletable || queueItem.deletable && _getAllChars().length) {\n          let newIndex = await _fireItemWithContext(index, queueItems);\n          Array(newIndex - index).fill(index + 1).map((x, y) => x + y).forEach((i) => {\n            let [key] = queueItems[i];\n            cleanUp(key);\n          });\n          index = newIndex;\n        }\n        cleanUp(queueKey);\n      }\n      if (!remember) {\n        return this;\n      }\n      _statuses.completed = true;\n      await _opts.afterComplete(this);\n      if (!_opts.loop) {\n        throw \"\";\n      }\n      let delay = _opts.loopDelay;\n      _wait(async () => {\n        await _prepLoop(delay[0]);\n        _fire();\n      }, delay[1]);\n    } catch (e) {\n    }\n    return this;\n  };\n  let _move = async (step) => {\n    _cursorPosition = updateCursorPosition(\n      step,\n      _cursorPosition,\n      _getAllChars()\n    );\n    repositionCursor(_element, _getAllChars(), _cursorPosition);\n  };\n  let _type = (char) => insertIntoElement(_element, char);\n  let _options = async (opts) => _opts = merge(_opts, opts);\n  let _empty = async () => {\n    if (_elementIsInput()) {\n      _element.value = \"\";\n      return;\n    }\n    _getAllChars().forEach(_removeNode);\n    return;\n  };\n  let _delete = () => {\n    let allChars = _getAllChars();\n    if (!allChars.length)\n      return;\n    if (_elementIsInput()) {\n      _element.value = _element.value.slice(0, -1);\n    } else {\n      _removeNode(allChars[_cursorPosition]);\n    }\n  };\n  this.break = function(actionOpts) {\n    return _queueAndReturn(\n      {\n        func: () => _type(createElement(\"BR\")),\n        typeable: true\n      },\n      actionOpts\n    );\n  };\n  this.delete = function(numCharacters = null, actionOpts = {}) {\n    numCharacters = handleFunctionalArg(numCharacters);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let num = numCharacters;\n    let { instant, to } = actionOpts;\n    let typeableQueueItems = _queue.getTypeable();\n    let rounds = (() => {\n      if (num === null) {\n        return typeableQueueItems.length;\n      }\n      if (isNumber(num)) {\n        return num;\n      }\n      return countStepsToSelector({\n        queueItems: typeableQueueItems,\n        selector: num,\n        cursorPosition: _getDerivedCursorPosition(),\n        to\n      });\n    })();\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: _delete,\n            delay: instant ? 0 : _getPace(1),\n            deletable: true\n          },\n          rounds\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.empty = function(actionOpts = {}) {\n    return _queueAndReturn({ func: _empty }, actionOpts);\n  };\n  this.exec = function(func, actionOpts = {}) {\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    return _queueAndReturn(\n      [bookEndQueueItems[0], { func: () => func(this) }, bookEndQueueItems[1]],\n      actionOpts\n    );\n  };\n  this.move = function(movementArg, actionOpts = {}) {\n    movementArg = handleFunctionalArg(movementArg);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let { instant, to } = actionOpts;\n    let numberOfSteps = countStepsToSelector({\n      queueItems: _queue.getTypeable(),\n      selector: movementArg === null ? \"\" : movementArg,\n      to,\n      cursorPosition: _getDerivedCursorPosition()\n    });\n    let directionalStep = numberOfSteps < 0 ? -1 : 1;\n    _predictedCursorPosition = _getDerivedCursorPosition() + numberOfSteps;\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: () => _move(directionalStep),\n            delay: instant ? 0 : _getPace(),\n            cursorable: true\n          },\n          Math.abs(numberOfSteps)\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.options = function(opts, actionOpts = {}) {\n    opts = handleFunctionalArg(opts);\n    _options(opts);\n    return _queueAndReturn({}, actionOpts);\n  };\n  this.pause = function(milliseconds, actionOpts = {}) {\n    return _queueAndReturn(\n      { delay: handleFunctionalArg(milliseconds) },\n      actionOpts\n    );\n  };\n  this.type = function(string, actionOpts = {}) {\n    string = handleFunctionalArg(string);\n    let { instant } = actionOpts;\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let chars = maybeChunkStringAsHtml(string, _opts.html);\n    let charsAsQueueItems = chars.map((char) => {\n      return {\n        func: () => _type(char),\n        char,\n        delay: instant || isNonVoidElement(char) ? 0 : _getPace(),\n        typeable: char.nodeType === Node.TEXT_NODE\n      };\n    });\n    let itemsToQueue = [\n      bookEndQueueItems[0],\n      { func: async () => await _opts.beforeString(string, this) },\n      ...charsAsQueueItems,\n      { func: async () => await _opts.afterString(string, this) },\n      bookEndQueueItems[1]\n    ];\n    return _queueAndReturn(itemsToQueue, actionOpts);\n  };\n  this.is = function(key) {\n    return _statuses[key];\n  };\n  this.destroy = function(shouldRemoveCursor = true) {\n    _timeouts = destroyTimeouts(_timeouts);\n    handleFunctionalArg(shouldRemoveCursor) && _cursor && _removeNode(_cursor);\n    _statuses.destroyed = true;\n  };\n  this.freeze = function() {\n    _statuses.frozen = true;\n  };\n  this.unfreeze = () => {\n  };\n  this.reset = function(rebuild) {\n    !this.is(\"destroyed\") && this.destroy();\n    if (rebuild) {\n      _queue.wipe();\n      rebuild(this);\n    } else {\n      _queue.reset();\n    }\n    _cursorPosition = 0;\n    for (let property in _statuses) {\n      _statuses[property] = false;\n    }\n    _element[_elementIsInput() ? \"value\" : \"innerHTML\"] = \"\";\n    return this;\n  };\n  this.go = function() {\n    if (_statuses.started) {\n      return this;\n    }\n    _attachCursor();\n    if (!_opts.waitUntilVisible) {\n      _fire();\n      return this;\n    }\n    fireWhenVisible(_element, _fire.bind(this));\n    return this;\n  };\n  this.flush = function(cb = () => {\n  }) {\n    _attachCursor();\n    _fire(false).then(cb);\n    return this;\n  };\n  this.getQueue = () => _queue;\n  this.getOptions = () => _opts;\n  this.updateOptions = (options2) => _options(options2);\n  this.getElement = () => _element;\n  let _element = selectorToElement(element);\n  let _timeouts = [];\n  let _cursorPosition = 0;\n  let _predictedCursorPosition = null;\n  let _statuses = merge({}, DEFAULT_STATUSES);\n  options.cursor = processCursorOptions(\n    options.cursor ?? DEFAULT_OPTIONS.cursor\n  );\n  let _opts = merge(DEFAULT_OPTIONS, options);\n  _opts = merge(_opts, {\n    html: !_elementIsInput() && _opts.html,\n    nextStringDelay: calculateDelay(_opts.nextStringDelay),\n    loopDelay: calculateDelay(_opts.loopDelay)\n  });\n  let _id = generateHash();\n  let _queue = Queue([{ delay: _opts.startDelay }]);\n  _element.dataset.typeitId = _id;\n  appendStyleBlock(PLACEHOLDER_CSS);\n  let _shouldRenderCursor = !!_opts.cursor && !_elementIsInput();\n  let _cursor = _setUpCursor();\n  _opts.strings = _maybePrependHardcodedStrings(asArray(_opts.strings));\n  if (_opts.strings.length) {\n    _generateQueue();\n  }\n};\nexport {\n  TypeIt as default\n};\n","import React, { useEffect, useRef } from 'react';\r\nimport TypeIt from 'typeit';\r\n\r\nconst TypingHeader = () => {\r\n  const typeItRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    typeItRef.current = new TypeIt('#aboutTags', {\r\n      strings: [\"Software Engineer\", \"Digital Artist\", \"Adventurer\"],\r\n      loop: true,\r\n      breakLines: false,\r\n      speed: 100,\r\n      deleteSpeed: 100,\r\n      lifeLike: true\r\n    }).go();\r\n  }, []);\r\n\r\n  return <div className=\"font-montserrat_regular dark:text-slate-200 text-2xl sm:text-3xl md:text-4xl lg:text-4xl\" id=\"aboutTags\" />;\r\n};\r\n\r\nexport default TypingHeader;\r\n","import * as React from \"react\";\r\nimport TypingHeader from \"./typingHeader\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <section className=\"about mx-auto flex columns-2 min-h-screen max-w-screen-xl px-6 py-12 md:px-12 md:py-20 lg:px-24 lg:py-0\">\r\n      <div className=\"lg:flex lg:justify-between lg:gap-4 px-1/25 py-1/5\">\r\n        <header className=\"lg:sticky lg:top-0 lg:flex lg:max-h-screen lg:w-1/3 lg:flex-col lg:py-24 sm:pb-1/25 md:pb-1/25 pb-1/25\">\r\n          <h1 className=\"font-roboto_bold text-4xl font-semibold sm:text-7xl md:text-7xl lg:text-7xl text-blue-600 dark:text-amber-500\">Faheim Arslan</h1>\r\n          <TypingHeader />\r\n        </header>\r\n        <div className=\"about-content pt-24 lg:w-2/3 lg:py-24 flex-grow-2\">\r\n          <h2 className=\"font-roboto_medium dark:text-slate-200 text-3xl sm:text-5xl md:text-5xl lg:text-5xl\">About</h2>\r\n          <p className=\"font-montserrat_regular dark:text-slate-200 text-xl sm:text-2xl md:text-2xl lg:text-2xl mt-3\">\r\n          Hello, I'm <div className=\"inline text-blue-600 dark:text-amber-500\">Faheim</div>, a creative <div className=\"inline text-emerald-700 dark:text-fuchsia-700\">software engineer</div> with <div className=\"inline text-purple-600 dark:text-rose-600\">3+ years of full-stack web development</div> experience. I blend technical expertise with an artistic touch to bring innovative digital solutions to life. Beyond code, I'm an aspiring artist and an adventurous soul.\r\n          </p>\r\n          <br />\r\n\r\n          <h2 className=\"font-roboto_medium dark:text-slate-200 text-3xl sm:text-5xl md:text-5xl lg:text-5xl\">What Sets Me Apart</h2>\r\n          <p className=\"font-montserrat_regular dark:text-slate-200 text-xl sm:text-2xl md:text-2xl lg:text-2xl mt-3\">\r\n            I don't just create software; I craft digital experiences. My\r\n            passion for art fuels my attention to detail, ensuring every project\r\n            I undertake is not only functional but visually stunning. As an\r\n            adventurer, I bring a sense of curiosity and fearlessness to\r\n            problem-solving, pushing the boundaries of what's possible.\r\n          </p>\r\n          <br />\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import * as React from \"react\";\r\n\r\nconst Contact = () => {\r\n  const emailAddress = \"faheimarslan@gmail.com\";\r\n\r\n  const handleEmailClick = () => {\r\n    window.location.href = `mailto:${emailAddress}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col justify-center px-1/25 py-1/5\">\r\n      <h2 className=\"font-roboto_medium dark:text-slate-200 text-3xl sm:text-5xl md:text-5xl lg:text-5xl\">\r\n        Get in Touch\r\n      </h2>\r\n      <br />\r\n      <p className=\"font-montserrat_regular dark:text-slate-200 text-xl sm:text-3xl md:text-4xl lg:text-4xl\">\r\n        Whether you're interested in collaborating on a project, discussing art,\r\n        or sharing adventure stories, I'm just a click away. Let's connect and\r\n        explore new horizons together.\r\n      </p>\r\n      <br />\r\n\r\n      <p\r\n        className=\"email-address font-roboto_light dark:text-amber-500 text-xl sm:text-4xl md:text-4xl lg:text-5xl hover:underline underline-offset-3 ml-auto cursor-pointer hover:pointer\"\r\n        onClick={handleEmailClick}\r\n      >\r\n        faheimarslan@gmail.com &#8599;\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","import * as React from \"react\";\r\n\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\n\r\nconst Experience = ({ data }) => {\r\n  const openWebsite = (url) => {\r\n    window.open(url, \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"mx-auto min-h-screen max-w-screen-xl flex flex-col justify-center items-center px-6 py-12 md:px-12 md:py-20 lg:px-24 lg:py-0\">\r\n      <div className=\"companies-header font-montserrat_regular dark:text-slate-200 text-xl sm:text-3xl md:text-4xl lg:text-4xl mb-1/25 sm:mb-1/50 md:mb-1/50 lg:mb-1/50\">\r\n        I'm proud to have worked with some remarkable companies\r\n      </div>\r\n\r\n      <div className=\"companies flex flex-col sm:flex-row md:flex-row lg:flex-row items-start justify-center space-x-4 px-1/8 lg:px-1/4\">\r\n\r\n        {data.allMdx.edges.map(({ node }) => (\r\n          <div\r\n            className={`${node.frontmatter.title} flex flex-1 flex-col items-center mt-12`}\r\n          >\r\n            <GatsbyImage image={getImage(node.frontmatter.image.childImageSharp)} alt={node.frontmatter.title} />\r\n            <p\r\n              className=\"designation_company_name font-roboto_light dark:text-slate-200 text-md cursor-pointer hover:pointer\"\r\n              onClick={() => openWebsite(`${node.frontmatter.website}`)}\r\n            >\r\n              {node.frontmatter.designation} | {node.frontmatter.title} &#8599;\r\n            </p>\r\n            <p className=\"text-md dark:text-slate-200\">{node.frontmatter.duration}</p>\r\n            <ul className=\"mt-2 flex flex-wrap mx-1/50 sm:mx-1/25 md:mx-1/25 lg:mx-1/8\">\r\n              {node.frontmatter.stack.map((child, index) => (\r\n                <li className=\"mr-1.5 mt-2\" key={index}>\r\n                  <div className=\"flex items-center rounded-full bg-slate-200 px-3 py-1 text-md font-roboto_light leading-5\">\r\n                    {child}\r\n                  </div>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Experience;","import React from \"react\";\r\n\r\nimport styles from \"../styles/ProjectList.module.css\";\r\nimport \"../styles/custom_cursor.css\";\r\n\r\nconst Projects = () => {\r\n  const projectList = [\r\n    \"Spring Source Code Generator\",\r\n    \"NuhArc\",\r\n    \"Dublin bikes time series analysis\",\r\n    \"Portfolio\",\r\n    \"Github issue finder\",\r\n    \"Airbnb price estimator\",\r\n    \"Fashion Generator using GANs\",\r\n  ];\r\n\r\n  const bgColors = [\r\n    \"yellow\",\r\n    \"blue\",\r\n    \"red\",\r\n    \"green\",\r\n    \"teal\",\r\n    \"cyan\",\r\n    \"fuchsia\",\r\n  ];\r\n\r\n  return (\r\n    <section className=\"projects min-h-screen\">\r\n      <div\r\n        className=\"font-roboto_medium dark:text-slate-200 text-3xl sm:text-5xl md:text-5xl lg:text-5xl flex justify-center items-center\r\n       mb-1/25 sm:mb-1/50 md:mb-1/50 lg:mb-1/50\"\r\n      >\r\n        My Work\r\n      </div>\r\n      <br />\r\n\r\n      <div\r\n        className=\"main-project-panel \r\n          md:px-48 md:py-24 \r\n          lg:px-48 lg:py-24 \r\n          flex\"\r\n      >\r\n        <div className=\"projects-container flex flex-wrap justify-center\">\r\n          {projectList.map((child, index) => (\r\n            <div className=\"project-panel mx-auto mt-4\" key={index}>\r\n              <div\r\n                className={`panel items-center shadow-xl \r\n                  px-3 py-3 h-36 w-48 text-xl hover:text-2xl\r\n                  md:px-6 md:py-6 md:h-72 md:w-116 md:text-3xl md:hover:text-4xl\r\n                  lg:px-6 lg:py-6 lg:h-72 lg:w-116 lg:text-3xl lg:hover:text-4xl \r\n                  font-montserrat_bold font-semibold rounded-2xl leading-normal\r\n                  transition-transform transform duration-400 ease-in-out hover:scale-105\r\n                `}\r\n                style={{\r\n                  backgroundColor: `var(--saturated-${bgColors[index]})`,\r\n                  color: `var(--darker-${bgColors[index]})`,\r\n                  transition: \"transform 0.3s\", // Add a transition for smooth transform animation\r\n                  transform: \"scale(1)\", // Set the initial transform\r\n                }}\r\n                // Apply the brightness filter on hover\r\n                onMouseEnter={(e) => {\r\n                  if (window.innerWidth > 768) {\r\n                    e.currentTarget.style.filter = \"saturate(200%)\"; // Adjust the brightness value\r\n                    e.currentTarget.style.transform = \"scale(1.1)\";\r\n                    e.currentTarget.style.cursor = \"none\";\r\n                  }\r\n                }}\r\n                // Reset the brightness on mouse leave for the current element\r\n                onMouseLeave={(e) => {\r\n                  if (window.innerWidth > 768) {\r\n                    e.currentTarget.style.filter = \"saturate(100%)\"; // Reset to the initial brightness\r\n                    e.currentTarget.style.transform = \"scale(1)\";\r\n                    e.currentTarget.style.cursor = \"auto\";\r\n                  }\r\n                }}\r\n\r\n                onMouseMove={(e) => {\r\n\r\n                }}\r\n              >\r\n                {child}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nconst NavigationBar = () => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  // Function to toggle between light and dark mode\r\n  const toggleDarkMode = () => {\r\n    setIsDarkMode(!isDarkMode);\r\n  };\r\n\r\n  // Effect to update HTML class based on dark mode state\r\n  useEffect(() => {\r\n    // Get the HTML element\r\n    const htmlElement = document.documentElement;\r\n\r\n    // Toggle the 'dark' class based on the dark mode state\r\n    isDarkMode\r\n      ? htmlElement.classList.add(\"dark\")\r\n      : htmlElement.classList.remove(\"dark\");\r\n  }, [isDarkMode]);\r\n\r\n  return (\r\n    <nav className=\"p-4 fixed w-full top-0 bg-white dark:bg-gray-800 shadow-lg z-10\">\r\n      <div className=\"container mx-auto flex justify-between items-center\">\r\n        <div className=\"font-vinasans_regular text-gray-700 dark:text-white text-3xl\">\r\n          faheim.\r\n        </div>\r\n        <div>\r\n          <button\r\n            onClick={toggleDarkMode}\r\n            className=\"bg-gray-600 text-white px-4 py-2 rounded-md\"\r\n          >\r\n            Toggle Theme\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import * as React from \"react\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nimport About from \"../components/about\";\r\nimport Contact from \"../components/contact\";\r\nimport Experience from \"../components/experience\";\r\nimport Projects from \"../components/projects\";\r\nimport NavigationBar from \"../components/navigationBar\";\r\n\r\nconst IndexPage = ({ data }) => {\r\n  return (\r\n    <div className=\"dark:bg-gray-800\">\r\n      <div>\r\n        <NavigationBar />\r\n      </div>\r\n      <main className=\"portfolio\">\r\n        <About />\r\n        <Experience data={data} />\r\n        <Projects />\r\n        <Contact />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const Head = () => <title>Home Page</title>;\r\n\r\nexport const query = graphql`\r\n  {\r\n    allMdx {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            designation\r\n            duration\r\n            title\r\n            website\r\n            stack\r\n            image {\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  blurredOptions: { width: 10 }\r\n                  placeholder: BLURRED\r\n                  transformOptions: { cropFocus: CENTER }\r\n                )\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","thing","asArray","value","toArray","val","from","createTextNode","content","document","expandTextNodes","element","childNodes","forEach","child","nodeValue","parentNode","insertBefore","remove","getParsedBody","doc","implementation","createHTMLDocument","body","DATA_ATTRIBUTE","CURSOR_CLASS","DEFAULT_STATUSES","started","completed","frozen","destroyed","DEFAULT_OPTIONS","breakLines","cursor","autoPause","autoPauseDelay","animation","frames","iterations","Infinity","easing","fill","cursorChar","cursorSpeed","deleteSpeed","html","lifeLike","loop","loopDelay","nextStringDelay","speed","startDelay","startDelete","strings","waitUntilVisible","beforeString","afterString","beforeStep","afterStep","afterComplete","PLACEHOLDER_CSS","walkElementNodes","shouldReverse","shouldIncludeCursor","nextNode","walker","createTreeWalker","NodeFilter","SHOW_ALL","acceptNode","node","classList","contains","FILTER_ACCEPT","FILTER_REJECT","nodes","originalParent","push","reverse","maybeChunkStringAsHtml","str","asHtml","createElement","el","appendStyleBlock","styles","id","styleBlock","appendChild","head","calculateDelay","delayArg","randomInRange","range2","Math","abs","random","range","isInput","handleFunctionalArg","arg","isNumber","Number","isInteger","selector","all","merge","originalObj","newObj","Object","assign","cursorFontStyles","color","transform","duplicate","times","countStepsToSelector","queueItems","cursorPosition","to","isMovingToEnd","selectorIndex","findIndex","char","parentElement","parentMatches","matches","firstChild","isSameNode","beforePaint","cb","Promise","resolve","async","getAnimationFromElement","getAnimations","find","dataset","tiAnimationId","setCursorAnimation","animate","pause","play","execute","queueItem","func","call","fireItem","index","wait","wait2","cursorOptions","instantQueue","tempIndex","futureItem","shouldBeGrouped","delay","shouldPauseCursor","q","effect","getComputedTiming","cancel","oldCurrentTime","currentTime","newAnimation","rebuildCursorAnimation","TypeIt","_wait","callback","silent","_statuses","this","unfreeze","_opts","timeouts","_timeouts","_fireItemWithContext","_cursor","_removeNode","rootElement","nodeParent","removeNode","_element","_elementIsInput","_getPace","calculatePace","_getAllChars","getAllChars","_queueAndReturn","steps","opts","_queue","_maybeAppendPause","_getDerivedCursorPosition","_predictedCursorPosition","_cursorPosition","_generateTemporaryOptionQueueItems","newOptions","_options","_addSplitPause","items","_attachCursor","_shouldRenderCursor","cursorSelector","computedStyles","getComputedStyle","customProperties","entries","reduce","accumulator","item","setCursorStyles","_id","options2","duration","_generateQueue","splitItems","_type","typeable","_delete","getTypeable","_fire","remember","cleanUp","qKey","done","getQueue","queueKey","deletable","newIndex","derivedCursorPosition","_move","Symbol","reset","set","_prepLoop","step","printedCharacters","min","max","allChars","newCursorPosition","nodeToInsertBefore","repositionCursor","originalTarget","textContent","target","tagName","insertIntoElement","_empty","break","actionOpts","delete","numCharacters","bookEndQueueItems","num","instant","typeableQueueItems","rounds","empty","exec","move","movementArg","numberOfSteps","directionalStep","cursorable","milliseconds","charsAsQueueItems","outerHTML","nodeType","Node","TEXT_NODE","itemsToQueue","is","destroy","shouldRemoveCursor","clearTimeout","freeze","rebuild","wipe","property","go","IntersectionObserver","observer2","entry","isIntersecting","unobserve","threshold","observe","fireWhenVisible","bind","flush","getOptions","updateOptions","getElement","defaultFrames","defaultOptions","processCursorOptions","toString","substring","initialItems","_q","innerText","buildQueueItem","rawValues","values","Map","keys","shouldDestroy","get","getItems","Queue","typeitId","visibility","_setUpCursor","existingMarkup","split","_maybePrependHardcodedStrings","TypingHeader","typeItRef","useRef","useEffect","React","About","Contact","onClick","handleEmailClick","window","location","href","_ref","data","allMdx","edges","_ref2","frontmatter","title","GatsbyImage","getImage","openWebsite","url","website","open","designation","stack","Projects","bgColors","onMouseEnter","innerWidth","currentTarget","onMouseLeave","onMouseMove","NavigationBar","isDarkMode","setIsDarkMode","useState","htmlElement","documentElement","toggleDarkMode","Experience","Head"],"sourceRoot":""}